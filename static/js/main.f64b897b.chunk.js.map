{"version":3,"sources":["components/Profile/profile.js","components/Statistics/statistics.js","components/FriendListItem/friendListItem.js","components/FriendList/friendList.js","components/TransactionHistory/transactionHistory.js","components/Container/container.js","App.js","reportWebVitals.js","index.js"],"names":["Profile","name","tag","location","avatar","stats","className","src","alt","followers","views","likes","Statistics","title","map","id","label","percentage","defaultProps","FriendListItem","isOnline","width","FriendList","friends","TransactionHistory","items","type","amount","currency","Container","children","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f64b897b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport './profile.css';\r\nconst Profile = ({ name, tag, location, avatar, stats }) => (\r\n  <div className=\"profile\">\r\n    <div className=\"description\" >\r\n      <img key={name} src={avatar} alt=\"Аватар пользователя\" className=\"avatar\"/>\r\n      <p className=\"name\">{name}</p>\r\n      <p className=\"tag\">{tag}</p>\r\n      <p className=\"location\">{location}</p>\r\n    </div>\r\n    <ul className=\"stats\">\r\n      <li >\r\n        <span className=\"label\">Followers</span>\r\n        <span className=\"quantity\"> {stats.followers}</span>\r\n      </li>\r\n      <li >\r\n        <span className=\"label\">Views</span>\r\n        <span className=\"quantity\"> {stats.views}</span>\r\n      </li>\r\n      <li >\r\n        <span className=\"label\">Likes</span>\r\n        <span className=\"quantity\"> {stats.likes}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  stats: PropTypes.objectOf(PropTypes.number).isRequired,\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./statistics.css\"\r\nconst Statistics = ({ title, stats }) => (\r\n  <section>\r\n    {title && <h2>{title}</h2>}\r\n    <ul className=\"stat-list\">\r\n      {stats.map(({ id, label, percentage }) => (\r\n        <li className=\"stat-item\" key={id}>\r\n          <span className=\"label\">{label}</span>\r\n          <span className=\"percentage\"> {percentage}%</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\nStatistics.defaultProps = {\r\n  title: \"\",\r\n};\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./friendListItem.css\"\r\nconst FriendListItem = ({ name, avatar, isOnline }) => (\r\n  <>\r\n    <span className=\"status\">{isOnline ? \"online\" : \"\" }</span>\r\n    <img className=\"avatar\" src={avatar} alt={name} width=\"48\" />\r\n    <p className=\"avatar-name\">{name}</p>\r\n  </>\r\n);\r\nFriendListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\nexport default FriendListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FriendListItem from \"../FriendListItem/friendListItem\";\r\nimport './friendList.css';\r\nconst FriendList = ({ friends }) => (\r\n  <ul className=\"friend-list\">\r\n    {friends.map(({ id, name, avatar, isOnline }) => (\r\n      <li className=\"friend-item\" key={id}>\r\n        <FriendListItem name={name} avatar={avatar} isOnline={isOnline}/>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\nexport default FriendList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./transactionHistory.css\"\r\nconst TransactionHistory = ({ items }) => (\r\n  <table className=\"transaction-history\">\r\n    <thead>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n    {items.map(({ id, type, amount, currency }) => (\r\n      <tbody key={id}>\r\n        <tr>\r\n          <td>{type}</td>\r\n          <td>{amount}</td>\r\n          <td>{currency}</td>\r\n        </tr>\r\n      </tbody>\r\n    ))}\r\n  </table>\r\n);\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\nexport default TransactionHistory;\r\n","import React from 'react';\r\nimport './container.css';\r\n\r\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\r\n\r\nexport default Container;","import \"./App.css\";\nimport user from \"./user.json\";\nimport Profile from \"./components/Profile/profile\";\nimport Statistics from \"./components/Statistics/statistics\";\nimport statisticalData from \"./statistical-data.json\";\nimport friends from \"./friends.json\";\nimport FriendList from \"./components/FriendList/friendList\";\nimport transactions from \"./transactions.json\";\nimport TransactionHistory from \"./components/TransactionHistory/transactionHistory\";\nimport Container from './components/Container/container';\nfunction App() {\n  return (\n    <>\n      <Container>\n      <Profile name={user.name} tag={user.tag} location={user.location} avatar={user.avatar} stats={user.stats} />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />;\n      <FriendList friends={friends} />;\n      <TransactionHistory items={transactions} />;\n        </Container>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}